openapi: 3.0.0
info:
  title: storage
  version: 1.0.0
paths:
  /download/{file_key}:
    get:
      summary: Download a file
      parameters:
        - in: path
          name: file_key
          required: true
          schema:
            type: string
        - in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful file download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /download/{file_key}/token:
    get:
      summary: Generate a download token for a file
      parameters:
        - in: path
          name: file_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful token generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /files:
    get:
      summary: Get file or list files
      parameters:
        - in: query
          name: key
          schema:
            type: string
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          required: false
        - in: query
          name: cursor
          schema:
            type: string
          required: false
        - in: query
          name: range
          schema:
            type: string
          required: false
        - in: query
          name: onlyIf
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful response
          headers:
            Content-Disposition:
              schema:
                type: string
              description: Contains the filename (if available)
              required: false
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '206':
          description: Successful response for file metadata (not content, i.e. partial)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/R2Object'
                  - $ref: '#/components/schemas/R2ObjectList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create or complete multipart upload
      parameters:
        - in: query
          name: upload_id
          schema:
            type: string
          required: false
        - in: query
          name: key
          schema:
            type: string
          required: false
        - in: query
          name: visibility
          schema:
            $ref: '#/components/schemas/Visibility'
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FileCreateStartBody'
                - type: array
                  items:
                    $ref: '#/components/schemas/R2UploadedPartBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/R2MultipartUploadResponse'
                  - $ref: '#/components/schemas/R2Object'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      summary: Upload file or file part
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                key:
                  type: string
                upload_id:
                  type: string
                part:
                  type: integer
                visibility:
                  $ref: '#/components/schemas/Visibility'
              required:
                - file
                - key
      responses:
        '200':
          description: Successful file upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R2Object'
        '201':
          description: Successful part upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R2UploadedPart'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
components:
  schemas:
    Visibility:
      type: string
      enum: [PUBLIC, PRIVATE, INTERNAL]
    R2Object:
      type: object
      properties:
        key: 
          type: string
        size: 
          type: integer
        etag: 
          type: string
        httpEtag: 
          type: string
        uploaded: 
          type: string
          format: date-time
    R2ObjectList:
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/R2Object'
    R2ObjectBody:
      type: string
      format: binary
      description: Raw file content
    FileCreateStartBody:
      type: object
      required:
        - key
      properties:
        key:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
    R2UploadedPartBody:
      type: object
      required:
        - etag
        - partNumber
      properties:
        etag:
          type: string
        partNumber:
          type: integer
    FileCreateBody:
      type: object
      required:
        - key
        - content
      properties:
        key:
          type: string
        content:
          type: string
          format: binary
        visibility:
          $ref: '#/components/schemas/Visibility'
    FileCreatePartBody:
      type: object
      required:
        - key
        - upload_id
        - part
        - content
      properties:
        key:
          type: string
        upload_id:
          type: string
        part:
          type: integer
        content:
          type: string
          format: binary
    R2MultipartUploadResponse:
      type: object
      required:
        - key
        - uploadId
      properties:
        key:
          type: string
        uploadId:
          type: string
    R2UploadedPart:
      type: object
      required:
        - etag
        - partNumber
      properties:
        etag:
          type: string
        partNumber:
          type: integer
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    Forbidden:
      description: Permission denied
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (without 'Bearer' prefix)
security:
  - ApiKeyAuth: []